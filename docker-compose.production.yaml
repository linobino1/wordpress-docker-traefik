version: '3.8'
name: wordpress

networks:
  traefik:
    external: true

volumes:
  wordpress:
  db:

services:
  wordpress:
    image: wordpress
    user: 1000:1000
    depends_on:
      - db
      - redis
    expose:
      - 80
    networks:
      - traefik
      - default
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '1'
          memory: 1024M
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wp
      WORDPRESS_DB_USER: wp
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_HOME', 'https://${DOMAIN}' );
        define( 'WP_SITEURL', 'https://${DOMAIN}' );
        define( 'WP_MEMORY_LIMIT', '1576M' );
        define( 'WP_MAX_MEMORY_LIMIT', '2048M' );
        define( 'WP_REDIS_HOST', 'redis' );
        define( 'WP_REDIS_PORT', '6379' );
    volumes:
      - wordpress:/var/www/html:rw
      - ./php.ini:/usr/local/etc/php/conf.d/php.ini 
    labels:
      - traefik.enable=true
      - traefik.http.routers.wp.rule=(Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`))
      - traefik.http.routers.wp.entrypoints=websecure
      - traefik.http.routers.wp.tls=true
      - traefik.http.routers.wp.tls.certresolver=letsencrypt
      - traefik.http.routers.wp.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.wp.tls.domains[0].sans=www.${DOMAIN}
      - traefik.docker.network=traefik

      # Redirect all www to non-www middleware
      - "traefik.http.middlewares.wp-to-nonwww.redirectregex.regex=^https?://www\\.${DOMAIN}(.*)"
      - "traefik.http.middlewares.wp-to-nonwww.redirectregex.replacement=https://${DOMAIN}$${1}"
      - traefik.http.middlewares.wp-to-nonwww.redirectregex.permanent=false
      - traefik.http.routers.wp.middlewares=wp-to-nonwww
        
      # Rate limit
      - traefik.http.middlewares.wp-ratelimit.rateLimit.average=100
      - traefik.http.middlewares.wp-ratelimit.rateLimit.burst=100
      - traefik.http.routers.wp.middlewares=wp-ratelimit
    restart: always
      
  wordpress-cli:
    image: wordpress:cli
    user: 1000:1000
    depends_on:
      - db
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wp
      WORDPRESS_DB_USER: wp
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_HOME', 'https://${DOMAIN}' );
        define( 'WP_SITEURL', 'https://${DOMAIN}' );
    volumes:
      - wordpress:/var/www/html:rw
    command: tail -f /dev/null
    restart: always

  db:
    image: mysql:5.7
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: wp
      MYSQL_USER: wp
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '1'
          memory: 1024M
    restart: always

  redis:
    image: redis:6
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    expose:
      - 6379
    # launch Redis in cache mode with :
    #  - max memory up to 50% of your RAM if needed (--maxmemory 512mb)
    #  - deleting oldest data when max memory is reached (--maxmemory-policy allkeys-lru)
    entrypoint: redis-server --maxmemory 1024mb --maxmemory-policy allkeys-lru

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    expose:
      - 80
    networks:
      - traefik
      - default
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN}`)
      - traefik.http.routers.phpmyadmin.entrypoints=websecure
      - traefik.http.routers.phpmyadmin.tls=true
      - traefik.http.routers.phpmyadmin.tls.certresolver=letsencrypt
      - traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-auth
      - traefik.http.middlewares.phpmyadmin-auth.basicauth.users=${BACKEND_AUTH}