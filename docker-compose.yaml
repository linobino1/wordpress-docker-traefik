services:

  wordpress:
    image: wordpress
    depends_on:
      - db
    expose:
      - 80
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: app
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: wp
    volumes:
      - uploads:/var/www/html/wp-content/uploads
    labels:
      - traefik.enable=true
      - traefik.http.routers.wordpress.rule=(Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`))
      - traefik.http.routers.wordpress.entrypoints=websecure
      - traefik.http.routers.wordpress.tls=true
      - traefik.http.routers.wordpress.tls.certresolver=letsencrypt
      - traefik.http.routers.wordpress.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.wordpress.tls.domains[0].sans=www.${DOMAIN}
      - traefik.http.routers.wordpress.middlewares=to-nonwww
    restart: always

  db:
    image: mysql:5.7
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: wp
      MYSQL_USER: app
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db:/var/lib/mysql
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    expose:
      - 80
    env_file: .env
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN}`)
      - traefik.http.routers.phpmyadmin.entrypoints=websecure
      - traefik.http.routers.phpmyadmin.tls=true
      - traefik.http.routers.phpmyadmin.tls.certresolver=letsencrypt
      - traefik.http.routers.phpmyadmin.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=${BACKEND_AUTH}

  traefik:
    image: traefik
    env_file: .env
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.phpmyadmin.address=:9000

      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL_ADMIN}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true

      # Redirect all HTTP traffic to HTTPS
      - traefik.http.middlewares.to-https.redirectscheme.scheme=https
      - traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.to-https.entrypoints=web
      - traefik.http.routers.to-https.middlewares=to-https

      # Redirect all www to non-www middleware
      - "traefik.http.middlewares.to-nonwww.redirectregex.regex=^https?://www\\.${DOMAIN}(.*)"
      - "traefik.http.middlewares.to-nonwww.redirectregex.replacement=https://${DOMAIN}$${1}"
      - traefik.http.middlewares.to-nonwww.redirectregex.permanent=false
        
      # Traefik dashboard
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.middlewares.auth.basicauth.users=${BACKEND_AUTH}
      - traefik.http.routers.traefik.middlewares=auth
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

volumes:
  wordpress:
  db:
